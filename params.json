{"name":"Mysqli","tagline":"PHP MySQLi Class with using Singleton (Multiple connections / PHP MySQL Profiler)","body":"PHP MySQLi Class (Multiple connections / PHP MySQL Profiler)\r\n----------\r\nPHP5 OOP DB Connection Class with MySQLi using Singleton, which support multiple connections.\r\nMySQLi connection avaliable to all MVC modules.\r\n\r\n#### Use ####\r\nSetting up config vars into **config_db.php**\r\n\r\n\tinterface config_db {\r\n\t\t// DB #1\r\n\t\tconst DB_HOST_local = 'localhost';\r\n\t\tconst DB_USER_local = 'user';  \r\n\t\tconst DB_PASS_local = 'pass'; \r\n\t\tconst DB_NAME_local = 'db1'; \r\n\t\r\n\t\t// DB #2\r\n\t\tconst DB_HOST_log = 'localhost';\r\n\t\tconst DB_USER_log = 'user';  \r\n\t\tconst DB_PASS_log = 'pass'; \r\n\t\tconst DB_NAME_log = 'db2';\r\n\t}\r\n  \r\nInsert this into your php script\r\n\r\n    require_once(__DIR__ . '/class.mysql.php');\r\n    require_once(__DIR__ . '/class.mysql_profiler.php');\r\n\t\r\n\t// Turn On MySQL Profiler\r\n    MySQL::profiler_on();\r\n    \r\n    $mysqli = MySQL::get_connect();\t\t\t\t// DB #1 (Default - local)\r\n    $mysqli_log = MySQL::get_connect('log');\t// DB #2, If you need multiple connections\r\n\t\r\n\t$Query = \"\r\n            \tSELECT\r\n\t                * \r\n                FROM \r\n\t                `m4`\r\n\t            WHERE \r\n\t            \t`m4_id` = '100'\r\n\t            LIMIT\r\n\t            \t1\r\n\t            ;\";\r\n\t$result = $mysqli->query($Query);     \r\n\t\t\r\n\t$Query = \"\r\n            \tSELECT\r\n\t                * \r\n                FROM \r\n\t                `parser`\r\n\t            ORDER BY \r\n\t            \t`id` DESC\r\n\t            ;\";\r\n\t$result = $mysqli_log->query($Query);    \r\n\r\n\t\r\n    print_r(MySQL::profiler_getDecorLog());\t\t// Get decorated table\r\n\t// print_r(MySQL::profiler_getLog());\t// Get simple array\r\n\r\n\r\n#### PHP MySQL Profiler ####\r\nPHP MySQL profiler allows you to trace SQL queries made in PHP code, the number of times they are called and the break down of their open, execution, prepare and fetch results times.\r\n\r\n![PHP MySQL Profiler](http://www.baikuzin.com/GitHub/mysqli/mysqli_profiler.gif)\r\n\r\nAnalyze the code profiling results in the profiler window. PHP SQL profiler provides the following options to use for the inspection of the results and php code navigation:  \r\n1. **Location** - Shows the code lines where SQL query is executed.   \r\n2. **Connection** - Shows the time spent to open connection to the database  \r\n3. **Time** - Shows time spent to fetch this SQL results  \r\n4. **Info** - Shows the columns - select_type, type, possible_keys, key, key_len, ref, rows, filtered, extra. \r\n ","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}